import 'package:calendar_test_project/pages/utils/colors.dart';
import 'package:flutter/material.dart';

class MoodStatistics extends StatefulWidget {
  final int? selectedParentIndex; // Make it nullable
  final double currentStress;
  final double currentSelfEsteem;

  MoodStatistics({
    required this.selectedParentIndex,
    required this.currentStress,
    required this.currentSelfEsteem,
  });

  @override
  _MoodStatisticsState createState() => _MoodStatisticsState();
}

class _MoodStatisticsState extends State<MoodStatistics> {
  double stressValue = 0.0;
  double selfEsteemValue = 0.0;

  @override
  void initState() {
    super.initState();
    Future.delayed(Duration(milliseconds: 300), () {
      setState(() {
        stressValue = widget.currentStress / 10;
        selfEsteemValue = widget.currentSelfEsteem / 10;
      });
    });
  }

  String getQuote() {
    if (widget.selectedParentIndex == null) {
      return "–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–≥–æ–¥–Ω—è?";
    }
    if (widget.selectedParentIndex == 0) return "–†–∞–¥–æ—Å—Ç—å ‚Äì —ç—Ç–æ —É–ª—ã–±–∫–∞ –¥—É—à–∏! üòä";
    if (widget.selectedParentIndex == 1) {
      return "–°—Ç—Ä–∞—Ö ‚Äì —ç—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å —à–∞–≥ –ø–µ—Ä–µ–¥ –ø–æ–±–µ–¥–æ–π! üí™";
    }
    if (widget.selectedParentIndex == 2) {
      return "–ó–ª–æ—Å—Ç—å ‚Äì —ç–Ω–µ—Ä–≥–∏—è, –Ω–∞–ø—Ä–∞–≤—å –µ–µ –≤ —Å–æ–∑–∏–¥–∞–Ω–∏–µ! üî•";
    }
    if (widget.selectedParentIndex == 3) {
      return "–ì—Ä—É—Å—Ç—å ‚Äì —ç—Ç–æ —Ç–µ–Ω—å, –∞ —Ç—ã ‚Äì —Å–≤–µ—Ç! ‚òÄÔ∏è";
    }
    if (widget.selectedParentIndex == 4) {
      return "–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ ‚Äì —Ç–≤–æ—è —Å—É–ø–µ—Ä—Å–∏–ª–∞! üßò";
    }
    return "–¢—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –¥—É–º–∞–µ—à—å! üåü";
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            "–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            style: TextStyle(
              color: AppColors.textDark,
              fontSize: 16,
              fontWeight: FontWeight.w800,
            ),
          ),
          SizedBox(height: 20),
          LinearProgressIndicator(
            value: stressValue,
            backgroundColor: Colors.grey[300],
            valueColor: AlwaysStoppedAnimation(Colors.orangeAccent),
            minHeight: 14.0,
          ),
          SizedBox(height: 10),
          Text("–°—Ç—Ä–µ—Å—Å: ${widget.currentStress.toStringAsFixed(1)} / 10"),
          SizedBox(height: 20),
          LinearProgressIndicator(
            value: selfEsteemValue,
            backgroundColor: Colors.grey[300],
            valueColor: AlwaysStoppedAnimation(Colors.blueAccent),
            minHeight: 14.0,
          ),
          SizedBox(height: 10),
          Text(
              "–°–∞–º–æ–æ—Ü–µ–Ω–∫–∞: ${widget.currentSelfEsteem.toStringAsFixed(1)} / 10"),
          SizedBox(height: 30),
          Center(
            child: Container(
              padding: EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.deepPurpleAccent.withOpacity(0.1),
                borderRadius: BorderRadius.circular(12),
              ),
              child: Text(
                getQuote(),
                textAlign: TextAlign.center,
                style: TextStyle(
                  fontSize: 18,
                  color: AppColors.textDark,
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}
